services:
  postgres:
    image: postgres:latest
    container_name: ${BACKEND_STORE_CONTAINER_NAME}
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ${PROJECT_DIR}/mlops_data/${BACKEND_STORE_CONTAINER_NAME}_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - mlops


  minio:
    image: quay.io/minio/minio
    depends_on:
      - postgres
    container_name: ${ARTIFACT_STORE_CONTAINER_NAME}
    restart: always
    ports:
      - "${ARTIFACT_STORE_PORT}:9000"
      - "${CONSOLE_PORT}:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_ACCESS_KEY}
      - MINIO_STORAGE_USE_HTTPS=false
    command: server /data --console-address ":9001" 
    volumes:
      - ${PROJECT_DIR}/mlops_data/${ARTIFACT_STORE_CONTAINER_NAME}_data:/data
    networks:
      - mlops


  minio-setup:
    image: quay.io/minio/mc
    depends_on:
      - postgres
      - minio
    volumes:
      - ./minio/create-bucket.sh:/create-bucket.sh
    entrypoint: /bin/sh
    command: -c "chmod +x ./create-bucket.sh && ./create-bucket.sh"
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_ACCESS_KEY}
    networks:
      - mlops

  
  mlflow:
    restart: always
    build: 
      context: ./mlflow_server
      dockerfile: Dockerfile
      args: 
        PYTHON_VERSION: ${PYTHON_VERSION}
        MLFLOW_VERSION: ${MLFLOW_VERSION}
    image: mlflow_server
    container_name: ${UI_CONTAINER_NAME}
    ports:
      - "5001:5000"
    environment:
      - AWS_ACCESS_KEY_ID=${MINIO_ACCESS_KEY} 
      - AWS_SECRET_ACCESS_KEY=${MINIO_SECRET_ACCESS_KEY} 
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000 
      - MLFLOW_S3_IGNORE_TLS=true 
    command: >
      mlflow server
      --backend-store-uri postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${BACKEND_STORE_CONTAINER_NAME}/${POSTGRES_DB} 
      --host 0.0.0.0
      --serve-artifacts
      --artifacts-destination s3://mlflow-artifacts  
    depends_on:
      - postgres
      - minio-setup 
    networks:
      - mlops


networks:
  mlops:
    driver: bridge